import { DbbyRow, DbbyConditionLeaf } from "./dbby-types.js";
export declare function and<Row extends DbbyRow, C extends DbbyConditionLeaf<Row>[] = DbbyConditionLeaf<Row>[]>(...conditions: C): ["and", ...C];
export declare function or<Row extends DbbyRow, C extends DbbyConditionLeaf<Row>[] = DbbyConditionLeaf<Row>[]>(...conditions: C): ["or", ...C];
export declare function find<Row extends DbbyRow>(...rows: Partial<Row>[]): {
    conditions: ["or", ...{
        equal: Partial<Row>;
    }[]];
} | {
    conditions: false;
};
export declare function findAll<V, R extends DbbyRow = DbbyRow>(values: V[], valueForRow: (v: V) => Partial<R>): {
    conditions: ["or", ...{
        equal: Partial<R>;
    }[]];
};
export declare function isDbbyTable(x: any): any;
