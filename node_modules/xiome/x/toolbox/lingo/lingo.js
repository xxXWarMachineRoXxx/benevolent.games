export function lingoHost(expose) {
    return async function executeHandler(key, ...args) {
        const handler = expose[key];
        if (!handler)
            throw new Error(`unknown handler "${key}"`);
        else
            await handler(...args);
    };
}
export function lingoRemote({ send }) {
    return new Proxy({}, {
        set: () => { throw new Error("cannot write to lingo remote"); },
        get: (target, property, receiver) => (...args) => {
            if (typeof property !== "string")
                throw new Error("lingo key must be string");
            return send(property, ...args);
        }
    });
}
//# sourceMappingURL=lingo.js.map