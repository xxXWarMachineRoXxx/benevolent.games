import { debounce } from "../debounce/debounce.js";
import { objectMap } from "../object-map.js";
import { deepClone, deepFreeze } from "../deep.js";
export function stateWrangler({ initial, render, debug = () => { }, }) {
    let latest;
    const render2 = debounce(1, () => render(latest));
    function commit(state) {
        latest = deepFreeze(deepClone(state));
        debug("state", latest);
        render2();
    }
    commit(initial);
    return function actionsFromReducers(reducers) {
        return objectMap(reducers, (reducer, key) => (...args) => {
            debug("action", key, ...args);
            const newState = reducer(latest, ...args);
            commit(newState);
        });
    };
}
//# sourceMappingURL=state-wrangler.js.map