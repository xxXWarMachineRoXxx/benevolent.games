export declare type Action<xReducer extends Reducer<any>> = (...args: DropFirst<Parameters<xReducer>>) => void;
export declare type Reducers<xState> = {
    [key: string]: Reducer<xState>;
};
export interface StateWranglerOptions<xState> {
    initial: xState;
    render: (state: xState) => void;
    debug?: (...args: any[]) => void;
}
declare type DropFirst<T extends unknown[]> = T extends [any, ...infer U] ? U : never;
declare type Reducer<xState> = (state: xState, ...args: any[]) => xState;
export {};
