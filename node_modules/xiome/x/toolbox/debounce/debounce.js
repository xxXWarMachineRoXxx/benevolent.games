export function debounce(delay, action) {
    let latestArgs;
    let timeout;
    let promise;
    let resolve;
    let reject;
    function reset() {
        latestArgs = undefined;
        if (timeout)
            clearTimeout(timeout);
        timeout = undefined;
        promise = new Promise((res, rej) => {
            resolve = res;
            reject = rej;
        });
    }
    reset();
    return ((...args) => {
        latestArgs = args;
        if (timeout)
            clearTimeout(timeout);
        timeout = setTimeout(() => {
            Promise.resolve(action(...latestArgs))
                .then(r => resolve(r))
                .catch(err => reject(err))
                .finally(() => reset());
        }, delay);
        return promise;
    });
}
//# sourceMappingURL=debounce.js.map