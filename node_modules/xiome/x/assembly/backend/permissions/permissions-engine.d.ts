import { DamnId } from "../../../toolbox/damnedb/damn-id.js";
import { PublicUserRole } from "../../../features/auth/aspects/users/types/public-user-role.js";
import { PermissionsTables } from "../../../features/auth/aspects/permissions/types/permissions-tables.js";
import { PermissionsDisplay } from "../../../features/auth/aspects/users/routines/permissions/types/permissions-display.js";
export declare function makePermissionsEngine({ isPlatform, permissionsTables }: {
    isPlatform: boolean;
    permissionsTables: PermissionsTables;
}): {
    getUsersHaveRoles: ({ userIds, onlyGetPublicRoles }: {
        userIds: string[];
        onlyGetPublicRoles: boolean;
    }) => Promise<{
        userId: string;
        userHasRoles: {
            userId: DamnId;
            roleId: DamnId;
            timeframeStart: number;
            timeframeEnd: number;
            public: boolean;
            hard: boolean;
            time: number;
        }[];
    }[]>;
    getAnonymousPrivileges: () => Promise<string[]>;
    getPrivilegesForUsers: (userIds: string[]) => Promise<{
        userId: string;
        privileges: string[];
    }[]>;
    getPublicRolesForUsers: (userIds: string[]) => Promise<{
        userId: string;
        publicUserRoles: PublicUserRole[];
    }[]>;
    getPermissionsDisplay: () => Promise<PermissionsDisplay>;
    getPrivileges: (privilegeIds: string[]) => Promise<{
        hard: boolean;
        label: string;
        time: number;
        privilegeId: string;
    }[]>;
    getAllPrivileges: () => Promise<{
        hard: boolean;
        label: string;
        time: number;
        privilegeId: string;
    }[]>;
    getUserPrivileges: (userId: string) => Promise<string[]>;
};
