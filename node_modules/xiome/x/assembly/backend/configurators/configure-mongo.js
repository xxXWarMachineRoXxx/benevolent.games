import mongodb from "mongodb";
import { objectMap } from "../../../toolbox/object-map.js";
import { dbbyMongo } from "../../../toolbox/dbby/dbby-mongo.js";
import { processBlueprint } from "../tools/process-blueprint.js";
import { memoryFlexStorage } from "../../../toolbox/flex-storage/memory-flex-storage.js";
import { UnconstrainedTables } from "../../../framework/api/types/table-namespacing-for-apps.js";
export async function configureMongo({ blueprintForRawDatabase, blueprintForNamespacedDatabase, config, }) {
    const mongo = await new mongodb.MongoClient(config.database.mongo.link).connect();
    const db = mongo.db(config.database.mongo.db);
    const databaseRaw = processBlueprint({
        blueprint: blueprintForRawDatabase,
        process: path => dbbyMongo({
            collection: db.collection(path.join("-")),
        }),
    });
    const databaseUnconstrained = await (async () => {
        const databaseNamespaced = processBlueprint({
            blueprint: blueprintForNamespacedDatabase,
            process: path => dbbyMongo({
                collection: db.collection(path.join("-")),
            }),
        });
        return objectMap(databaseNamespaced, value => new UnconstrainedTables(value));
    })();
    return {
        mockStorage: memoryFlexStorage(),
        database: { ...databaseRaw, ...databaseUnconstrained },
    };
}
//# sourceMappingURL=configure-mongo.js.map