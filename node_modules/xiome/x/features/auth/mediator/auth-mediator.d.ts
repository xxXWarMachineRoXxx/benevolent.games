import { Service } from "../../../types/service.js";
import { AccessPayload, AuthTokens } from "../types/auth-tokens.js";
import { AccessEventListener } from "./types/access-event-listener.js";
import { makeGreenService } from "../aspects/users/services/green-service.js";
import { FlexStorage } from "../../../toolbox/flex-storage/types/flex-storage.js";
export declare function makeAuthMediator({ appId, storage, greenService, }: {
    appId: string;
    storage: FlexStorage;
    greenService: Service<typeof makeGreenService>;
}): {
    subscribeToAccessChange: import("../../../toolbox/pubsub.js").Subscribe<AccessEventListener>;
    subscribeToTokenChange: import("../../../toolbox/pubsub.js").Subscribe<() => void>;
    initialize(): Promise<AccessPayload>;
    getValidAccess(): Promise<AccessPayload>;
    getValidAccessToken(): Promise<string>;
    login(tokens: AuthTokens): Promise<AccessPayload>;
    logout(): Promise<AccessPayload>;
    reauthorize(): Promise<AccessPayload>;
};
