import { Op } from "../../../../../framework/ops.js";
import { AccessPayload } from "../../../types/auth-tokens.js";
import { PersonalModelOptions } from "./types/personal-model-options.js";
import { ProfileDraft } from "../routines/personal/types/profile-draft.js";
export declare function makePersonalModel({ personalService, getAccessOp, reauthorize, }: PersonalModelOptions): {
    track: <X>(observer: import("../../../../../toolbox/snapstate/parts/types.js").Observer<{
        accessOp: Op<AccessPayload>;
        submitDraftOp: Op<void>;
    }, X>, reaction?: import("../../../../../toolbox/snapstate/parts/types.js").Reaction<X>) => () => void;
    subscribe: (listener: (context: import("../../../../../toolbox/snapstate/parts/types.js").Readable<{
        accessOp: Op<AccessPayload>;
        submitDraftOp: Op<void>;
    }>) => void) => () => void;
    readable: import("../../../../../toolbox/snapstate/parts/types.js").Readable<{
        accessOp: Op<AccessPayload>;
        submitDraftOp: Op<void>;
    }>;
    saveProfile(profileDraft: ProfileDraft): Promise<void>;
    updateAccessOp(op: Op<AccessPayload>): void;
};
