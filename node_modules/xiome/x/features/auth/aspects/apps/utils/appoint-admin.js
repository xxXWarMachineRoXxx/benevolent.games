import { find } from "../../../../../toolbox/dbby/dbby-helpers.js";
import { DamnId } from "../../../../../toolbox/damnedb/damn-id.js";
import { assertEmailAccount } from "../../users/routines/login/assert-email-account.js";
import { appPermissions } from "../../../../../assembly/backend/permissions/standard-permissions.js";
const adminRoleId = DamnId.fromString(appPermissions.roles.admin.roleId);
export async function appointAdmin({ email, authTables, rando, config, generateNickname, }) {
    const { userId: adminUserId } = await assertEmailAccount({
        rando,
        email,
        config,
        authTables,
        generateNickname,
    });
    await authTables.permissions.userHasRole.assert({
        ...find({ userId: adminUserId, roleId: adminRoleId }),
        make: async () => ({
            userId: adminUserId,
            roleId: adminRoleId,
            hard: false,
            public: true,
            timeframeEnd: undefined,
            timeframeStart: undefined,
            time: Date.now()
        })
    });
}
//# sourceMappingURL=appoint-admin.js.map