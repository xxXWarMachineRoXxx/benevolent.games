import { ops } from "../../../../framework/ops.js";
import { makeActivator } from "../utils/make-activator.js";
export function makeSubscriptionPlanningSubmodel({ state, allowance, subscriptionPlanningService, }) {
    async function loadSubscriptionPlans() {
        await ops.operation({
            setOp: op => state.writable.subscriptionPlansOp = op,
            promise: subscriptionPlanningService.listSubscriptionPlans(),
        });
    }
    const activator = makeActivator(loadSubscriptionPlans);
    return {
        activate: activator.activate,
        refresh: activator.refreshIfActivated,
        async addPlan(options) {
            const newPlan = await subscriptionPlanningService.addPlan(options);
            const oldPlans = ops.value(state.readable.subscriptionPlansOp) ?? [];
            state.writable.subscriptionPlansOp = ops.replaceValue(state.readable.subscriptionPlansOp, [...oldPlans, newPlan]);
            return newPlan;
        },
    };
}
//# sourceMappingURL=subscription-planning-submodel.js.map