import * as renraku from "renraku";
import { AnswerDraft } from "../types/answer-draft.js";
import { Answer } from "../types/questions-and-answers.js";
import { UserMeta } from "../../../auth/types/auth-metas.js";
import { DamnId } from "../../../../toolbox/damnedb/damn-id.js";
import { QuestionsApiOptions } from "../types/questions-api-options.js";
export declare const makeQuestionsAnsweringService: (options: QuestionsApiOptions) => renraku.Service<UserMeta, import("../../../auth/types/auth-metas.js").UserAuth & {
    questionsTables: import("../../../../toolbox/dbby/dbby-types.js").DbbyConstrainTables<{
        "namespace-appId": DamnId;
    }, import("../tables/types/questions-tables.js").QuestionsTables>;
}, {
    postAnswer(inputs: {
        questionId: string;
        answerDraft: AnswerDraft;
    }): Promise<Answer>;
    archiveAnswer(inputs: {
        archive: boolean;
        answerId: string;
    }): Promise<void>;
    likeAnswer(inputs: {
        like: boolean;
        answerId: string;
    }): Promise<void>;
    reportAnswer(inputs: {
        report: boolean;
        answerId: string;
    }): Promise<void>;
}>;
